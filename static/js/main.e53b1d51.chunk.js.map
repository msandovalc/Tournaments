{"version":3,"sources":["Components/Theme.js","Components/Material.js","Components/TeamList.js","Components/Match.js","Components/Bracket.js","Components/Teams.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","type","typography","useNextVariants","Theme","react_default","a","createElement","styles","this","props","children","React","Component","Material","Components_Theme","CssBaseline_default","index_es","position","className","variant","color","href","target","src","width","height","title","alt","container","TeamList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createTeam","bind","assertThisInitialized","team","_this2","ListItem_default","key","name","Delete_default","onClick","handleDelete","delete","listTeams","teams","map","direction","justify","alignItems","keys","length","gutterBottom","List_default","Match","state","topScore","bottomScore","handleScoreChange","handleBottomScoreChange","handleTopScoreChange","bottomTeam","e","Number","value","setState","alert","scoreChange","topTeam","next","label","onChange","onBlur","disabled","Bracket","numOfTeams","addTempTeams","createRound","createBracket","i","push","start","end","round","tempStart","Components_Match","bracket","index","Math","temparray","slice","id","Teams","newTeam","showBracket","handleAddTeam","handleChange","handleCreateBracket","teamIsDuplicate","window","Date","now","prevState","concat","preventDefault","isDuplicate","filteredList","filter","onSubmit","Button_default","Components_Bracket","TextField_default","placeholder","Components_TeamList","ReactDOM","render","Components_Material","Components_Teams","document","querySelector"],"mappings":"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","file":"static/js/main.e53b1d51.chunk.js","sourcesContent":["import React from 'react'\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\n// Theme.js uses Material-UI framework (https://material-ui.com/) to make the app beautiful\r\n\r\n//Theme contains variables with primary color of the app and forces the app to use Roboto as it's font\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ff5722',\r\n        },\r\n        type: 'dark',\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n});\r\n\r\n//Theme is a class that wraps other elements and passes it's theme onto them\r\nclass Theme extends React.Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>{this.props.children}</MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\n//Exports the Theme component so other files can use it\r\nexport default Theme;","import { Toolbar, Typography, AppBar, Grid } from '@material-ui/core';\r\nimport Theme from './Theme'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport React from 'react';\r\n\r\n// The Material components renders the navbar and Grid container for it's child components\r\nclass Material extends React.Component {\r\n    render() {\r\n        return (\r\n            <Theme>\r\n                <CssBaseline />\r\n                <AppBar position=\"static\" className=\"toolBar\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\">Tournaments</Typography>\r\n                        <a href=\"https://github.com/tehSIRius/tournaments\" target=\"blank\" className=\"githubLink\">\r\n                            <img src=\"Github.png\" width=\"36\" height=\"36\" title=\"This project is available on Github!\" alt=\"Github link\" />\r\n                        </a>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Grid container>\r\n                    {this.props.children}\r\n                </Grid>\r\n            </Theme>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Material;","import React from 'react';\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport Delete from '@material-ui/icons/Delete'\r\nimport { Grid, Typography, Card, CardContent } from '@material-ui/core';\r\n\r\n// Renders out the list of the teams\r\nclass TeamList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.createTeam = this.createTeam.bind(this);\r\n    }\r\n\r\n    // Returns the actual JSX element a team will be rendered as\r\n    createTeam(team) {\r\n        return <ListItem key={team.key}>{team.name}<Delete className=\"delete\" onClick={() => this.handleDelete(team.key)} /></ListItem>\r\n    }\r\n\r\n    // Handles the deletion of a team\r\n    handleDelete(key) {\r\n        this.props.delete(key);\r\n    }\r\n\r\n    // List of team is displayed in a Card component\r\n    // Only if the list of teams is not empty\r\n    render() {\r\n        var teams = this.props.teams;\r\n        var listTeams = teams.map(this.createTeam);\r\n\r\n        return (\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" className=\"listOfTeams\">\r\n                {Object.keys(this.props.teams).length > 0 ? <Card>\r\n                    <CardContent>\r\n                        <Typography variant=\"h4\" gutterBottom>Selected Teams</Typography>\r\n                        <List className=\"theList\">\r\n                            {listTeams}\r\n                        </List>\r\n                    </CardContent>\r\n                </Card> : null}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamList","import React from 'react'\r\nimport { TextField, Grid } from '@material-ui/core'\r\n\r\n// Match represents a game between two teams\r\nclass Match extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            topScore: 0,\r\n            bottomScore: 0,\r\n        };\r\n\r\n        this.handleScoreChange = this.handleScoreChange.bind(this);\r\n        this.handleBottomScoreChange = this.handleBottomScoreChange.bind(this);\r\n        this.handleTopScoreChange = this.handleTopScoreChange.bind(this);\r\n\r\n        // If second team is not set, the first one is automatically chosen as a winner\r\n        if (this.props.bottomTeam === \"\") {\r\n            this.state.bottomScore = -1;\r\n            this.handleScoreChange();\r\n        }\r\n    }\r\n\r\n    // Handles the change of the score for the first team\r\n    // Shows error message in case of invalid input\r\n    handleTopScoreChange(e) {\r\n        if (Number(e.target.value) >= 0 && Number(e.target.value) <= 1000) {\r\n            this.setState({ topScore: Number(e.target.value) });\r\n        }\r\n        else {\r\n            alert(\"Score must be in the range between 0 and 1000!\");\r\n        }\r\n    }\r\n\r\n    // Same as handleTopScoreChange only for the bottomTeam\r\n    // Same function can't be used for both since e carries only value and not name of the team\r\n    handleBottomScoreChange(e) {\r\n        if (Number(e.target.value) >= 0 && Number(e.target.value) <= 1000) {\r\n            this.setState({ bottomScore: Number(e.target.value) });\r\n        }\r\n        else {\r\n            alert(\"Score must be in the range between 0 and 1000!\");\r\n        }\r\n    }\r\n\r\n    // handleScoreChange calls upon the parent component to handle the change\r\n    handleScoreChange() {\r\n        if (Number(this.state.topScore) > Number(this.state.bottomScore)) {\r\n            this.props.scoreChange(this.props.topTeam, this.props.next);\r\n        }\r\n        else if(Number(this.state.bottomScore) > Number(this.state.topScore)) {\r\n            this.props.scoreChange(this.props.bottomTeam, this.props.next);\r\n        }\r\n    }\r\n\r\n    // In case of no second team, the render function\r\n    // Renders a disabled field\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"flex-end\" className=\"matchWrapper\">\r\n                <TextField variant=\"filled\" label={this.props.topTeam} value={this.state.topScore} onChange={this.handleTopScoreChange} onBlur={this.handleScoreChange}/>\r\n                {this.props.bottomTeam === \"\" ?\r\n                    <TextField disabled label=\"Empty Seed\" value={this.state.bottomScore}/> :\r\n                    <TextField variant=\"filled\" label={this.props.bottomTeam} value={this.state.bottomScore} onChange={this.handleBottomScoreChange}  onBlur={this.handleScoreChange}/>}\r\n            </Grid>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Match;","import React from 'react';\r\nimport Match from './Match';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\n// Bracket is the main component of the whole app\r\n// It renders the tournament bracket and it also carries the logic of the app\r\nclass Bracket extends React.Component {\r\n\r\n    // Constructor sets component-wide variables and binds the component's functions\r\n    // It also makes the additional teams\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            teams: [],\r\n            numOfTeams: Object.keys(this.props.teams).length,\r\n        }\r\n\r\n        this.addTempTeams();\r\n        this.createRound = this.createRound.bind(this);\r\n        this.createBracket = this.createBracket.bind(this);\r\n        this.handleScoreChange = this.handleScoreChange.bind(this);\r\n    }\r\n\r\n    // Calculates the number of byes games needed to fit a bracket\r\n    calculateByes() {\r\n        for (var i = 2; i < this.state.numOfTeams; i *= 2);\r\n\r\n        if (this.state.numOfTeams % i === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.state.numOfTeams - (i / 2);\r\n        }\r\n    }\r\n\r\n    // To make the whole app more user friendly\r\n    // addTempTeams creates temporary teams, which are deleted\r\n    // when a real team gets to their spot\r\n    addTempTeams() {\r\n        for (var i = 0; i < Object.keys(this.props.teams).length; ++i) {\r\n            this.state.teams.push(this.props.teams[i].name);\r\n        }\r\n\r\n        for (i = 1; i <= (this.state.numOfTeams - 1); ++i) {\r\n            this.state.teams.push(\"Winner of match #\" + i);\r\n        }\r\n    }\r\n\r\n    // Create round creates a whole batch of matches\r\n    // In case there isn't an even number of teams\r\n    // It creates a free spot when the last team in the bracket\r\n    // Automatically wins\r\n\r\n    // start - the starting point, from which teams are chosen\r\n    // end - ending point for choosing teams\r\n    createRound(start, end) {\r\n        var round = []; // Array of components in the round\r\n        var tempStart = start; // Offset from which the next match is calculated\r\n\r\n        for (var i = start; i < end; i += 2) {\r\n            round.push(<span className=\"roundSpacer\">&nbsp;</span>);\r\n            round.push(<Match topTeam={this.state.teams[i]} bottomTeam={this.state.teams[i + 1]} scoreChange={this.handleScoreChange} next={end - start + tempStart} />);\r\n\r\n            ++tempStart;\r\n        }\r\n\r\n        round.push(<span className=\"roundSpacer\">&nbsp;</span>);\r\n\r\n        return round;\r\n    }\r\n\r\n    // Create bracket takes care of all the rounds\r\n    // And adds a winner spot at the end\r\n    createBracket() {\r\n        var bracket = [];\r\n        var index = 0;\r\n\r\n        for (var i = this.state.numOfTeams; i > 1; i = Math.round(i / 2)) {\r\n            bracket.push(\r\n                <ul className=\"round\">\r\n                    {this.createRound(index, index + i)}\r\n                </ul>);\r\n\r\n            index += i;\r\n        }\r\n\r\n        // Field with the tournament winner\r\n        bracket.push(\r\n            <ul className=\"winner round\">\r\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                    <img src=\"trophy.png\" alt=\"Winner\" width=\"46\" height=\"46\" />\r\n                    <Typography variant=\"h6\" gutterBottom>{this.state.teams[Object.keys(this.state.teams).length - 1]}</Typography>\r\n                </Grid>\r\n            </ul>\r\n        );\r\n\r\n        return bracket;\r\n    }\r\n\r\n    // handleScoreChange is called from a Match component\r\n    // It creates a temporary array in which a team is set into their new spot\r\n\r\n    // Value - the name of the team\r\n    // Next - the index of the new position\r\n    handleScoreChange(value, next) {\r\n        var temparray = this.state.teams.slice();\r\n        temparray[next] = value;\r\n        this.setState({ teams: temparray });\r\n    }\r\n\r\n    render() {\r\n        var bracket = this.createBracket();\r\n\r\n        return (\r\n            <div id=\"bracket\">\r\n                {bracket}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bracket","import React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport TeamList from './TeamList';\r\nimport Bracket from './Bracket'\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// The Teams component handles adding and removing teams\r\n// and it renders out the interactive bracket afterwards\r\nclass Teams extends React.Component {\r\n\r\n    // constructor initializes local variables (state) as well as passed-on variables (props)\r\n    // It also handles binding of local functions\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newTeam: \"\",\r\n            showBracket: false,\r\n            teams: []\r\n        };\r\n\r\n        this.handleAddTeam = this.handleAddTeam.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleCreateBracket = this.handleCreateBracket.bind(this);\r\n        this.teamIsDuplicate = this.teamIsDuplicate.bind(this);\r\n    }\r\n\r\n    // Adds team to the dictionary with time as it's key\r\n    // For simplicity the name is limited to 20 characters\r\n    // Shows error message in case of invalid input\r\n    handleAddTeam(e) {\r\n        if (this.state.newTeam !== \"\" && !this.teamIsDuplicate(this.state.newTeam)) {\r\n            var newTeam = {\r\n                name: this.state.newTeam,\r\n                key: Date.now(),\r\n            };\r\n\r\n            this.setState((prevState) => {\r\n                return {\r\n                    teams: prevState.teams.concat(newTeam)\r\n                };\r\n            });\r\n\r\n            this.setState({ newTeam: \"\" });\r\n        }\r\n        else {\r\n            window.alert(\"Invalid team name was selected!\\nNames have to be at least 1 character long!\\nNames cannot be duplicate!\");\r\n        }\r\n\r\n        // Prevents the page from being reloaded\r\n        e.preventDefault();\r\n    }\r\n\r\n    // Checks if the name of the team is duplicate\r\n    teamIsDuplicate(name) {\r\n        var isDuplicate = false;\r\n\r\n        for (var i = 0; i < Object.keys(this.state.teams).length; ++i) {\r\n            if (this.state.teams[i].name === name) {\r\n                isDuplicate = true;\r\n            }\r\n        }\r\n        return isDuplicate;\r\n    }\r\n\r\n    // Deletes the team from the list\r\n    handleDelete(key) {\r\n        var filteredList = this.state.teams.filter(function (team) {\r\n            return (team.key !== key);\r\n        })\r\n\r\n        this.setState({\r\n            teams: filteredList\r\n        })\r\n    }\r\n\r\n    // Handles changes in the input field\r\n    // It is needed because the value in the field is always equal to variable newTeam\r\n    // Without handle function the user is unable to change it's value\r\n    handleChange(e) {\r\n        if (e.target.value.length <= 20) {\r\n            this.setState({ newTeam: e.target.value });\r\n        }\r\n    }\r\n\r\n    // Renders or hides the bracket\r\n    // Shows an error message in case not enough teams were selected\r\n    handleCreateBracket(e) {\r\n        if (Object.keys(this.state.teams).length > 1) {\r\n            this.setState({ showBracket: !this.state.showBracket });\r\n        }\r\n        else {\r\n            alert(\"Not enough teams were selected!\\nThere need to be at least 2 teams to generate a tournament!\");\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                {this.state.showBracket ?\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <form onSubmit={this.handleCreateBracket}>\r\n                            <Button className=\"bracketButton\" type=\"submit\" variant=\"contained\" color=\"primary\">Change Teams</Button>\r\n                        </form>\r\n                        <Bracket teams={this.state.teams} />\r\n                    </Grid> :\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <form onSubmit={this.handleAddTeam}>\r\n                            <TextField placeholder=\"Enter a team name\" value={this.state.newTeam} onChange={this.handleChange}></TextField>\r\n                            <Button id=\"teamButton\" type=\"submit\" variant=\"contained\" color=\"primary\">Add team</Button>\r\n                        </form>\r\n                        <TeamList teams={this.state.teams} delete={this.handleDelete} />\r\n                        <form onSubmit={this.handleCreateBracket}>\r\n                            <Button className=\"bracketButton\" type=\"submit\" variant=\"contained\" color=\"primary\">Create Tournament</Button>\r\n                        </form>\r\n                    </Grid>}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Teams;","// Tournaments\r\n// Created by Patrik Dvořáček, Matematicko-fyzikální fakulta UK\r\n// Zimní semestr 2018/2019\r\n// Programování NPRG030\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Material from './Components/Material'\r\nimport Teams from './Components/Teams'\r\n\r\n// index.js serves as starting point of a react application\r\n// It's only function is to render the components on the /public/index.html file\r\n\r\nfunction App() {\r\n  return (\r\n    <Material>\r\n      <Teams />\r\n    </Material>\r\n  );\r\n}\r\n\r\n// index.js renders it's content in the component with id=app\r\nReactDOM.render(<App />, document.querySelector('#app'));"],"sourceRoot":""}